<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>com.epam.das2.hboard</groupId>
    <artifactId>dashboard</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>dashboard</name>

    <properties>
        <java.version>1.8</java.version>
        <lombok.version>1.18.6</lombok.version>
        <hibernate-validator.version>6.0.14.Final</hibernate-validator.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <dozer.version>5.5.1</dozer.version>
        <springfox-swagger2.version>2.9.2</springfox-swagger2.version>
        <mapstruct.version>1.3.0.Final</mapstruct.version>
        <gson.version>2.8.5</gson.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>-->


        <!-- Validation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Swagger 2 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger2.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger2.version}</version>
        </dependency>

        <!-- Mapstruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-jdk8</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <!-- Utils -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>in-memory-mongodb</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <flapdoodle.version>1.50.5</flapdoodle.version>
                <embedmongo-spring.version>RELEASE</embedmongo-spring.version>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>de.flapdoodle.embed</groupId>
                    <artifactId>de.flapdoodle.embed.mongo</artifactId>
                    <version>${flapdoodle.version}</version>
                </dependency>
                <dependency>
                    <groupId>cz.jirutka.spring</groupId>
                    <artifactId>embedmongo-spring</artifactId>
                    <version>${embedmongo-spring.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <surefire.version>3.0.0-M1</surefire.version>
                <pitest.version>1.4.3</pitest.version>
            </properties>

            <build>
                <plugins>
                    <!-- Automatically added to test phase -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire.version}</version>
                    </plugin>

                    <!-- Running command when plugin is not included to test phase: -->
                    <!-- mvn clean test org.pitest:pitest-maven:mutationCoverage -P test -->
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>${pitest.version}</version>

                        <executions>
                            <execution>
                                <id>pit-report</id>
                                <!-- Attaches the goal into mvn test phase -->
                                <!-- When active run command: mvn clean test -P test -->
                                <phase>test</phase>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                            </execution>
                        </executions>

                        <configuration>
                            <targetClasses>
                                <param>com.epam.dashboard.controller.BoardController</param>
                                <param>com.epam.dashboard.controller.UserController</param>
                                <param>com.epam.dashboard.controller.ErrorHandlingController</param>
                            </targetClasses>
                            <targetTests>
                                <param>com.epam.dashboard.controller.BoardControllerTest</param>
                                <param>com.epam.dashboard.controller.UserControllerTest</param>
                            </targetTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
